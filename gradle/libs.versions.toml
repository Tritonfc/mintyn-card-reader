[versions]
compileSdk = "33"
minSdk = "24"
targetSdk = "33"
versionCode = "1"
versionName = "1.0"

android = "8.1.0"
kotlin = "1.8.0"
coroutine = "1.7.3"
coroutineTest = "1.6.1"
ktor = "2.3.1"
kotest = "5.6.2"
mockk = "1.13.5"
retrofit = "2.11.0"
sqlDelight = "1.5.4"
junit = "4.12"
mockitoKotlin = '4.0.0'
mockitoAndroid = '4.3.1'
archTesting = '2.1.0'
turbine = "1.0.0"

navigation = "2.6.0"
composeBom = "2023.06.01"
composeKotlinCompiler = "1.4.0"
daggerHilt = "2.44"
httpLoggingInterceptor = "4.10.0"
hilt = "1.0.0"

[plugins]

android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
daggerHilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
sqlDelight = { id = "com.squareup.sqldelight", version.ref = "sqlDelight" }

[libraries]

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }
coroutines-test ={module = "org.jetbrains.kotlinx:kotlinx-coroutines-test",version.ref="coroutineTest"}

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# Logging Interceptor
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "httpLoggingInterceptor" }

# Kotest
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertionCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest"  }

# Mockk
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }

#Mockito
mockito-kotlin ={module = "org.mockito.kotlin:mockito-kotlin",version.ref="mockitoKotlin"}
mockito-android = {module = "org.mockito:mockito-android",version.ref = "mockitoAndroid"}
arch-core ={module = "androidx.arch.core:core-testing",version.ref = "archTesting"}

#Junit
junit = {module = "junit:junit",version.ref="junit"}

# SqlDelight
sqlDelight-androidDriver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-sqliteDriver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

# Turbine
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Navigation
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-material = { module = "androidx.compose.material:material" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-toolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Dagger Hilt
dagger-hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
dagger-hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "daggerHilt" }

# Hilt
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt" }

#Gson
gson = {module = "com.google.code.gson:gson",version = "2.9.0"}

# AndroidX
androidX-coreKtx = { module = "androidx.core:core-ktx", version = "1.10.1" }
androidX-activity={module="androidx.activity:activity-ktx",version = "1.8.2"}
androidX-appCompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidX-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidX-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version = "2.6.1" }
androidX-lifecycle-runtime ={module = "androidx.lifecycle:lifecycle-runtime-ktx",version="2.6.1"}
androidX-lifecycle-livedata = {module = "androidx.lifecycle:lifecycle-livedata-ktx",version = "2.6.1"}
androidX-workRuntime = { module = "androidx.work:work-runtime-ktx", version = "2.8.1"}

# Retrofit
retrofit-core = {module = "com.squareup.retrofit2:retrofit", version.ref="retrofit"}
retrofit-converter ={module = "com.squareup.retrofit2:converter-gson",version.ref="retrofit"}

# Nitrozen
nitrozenAndroid = { module = "com.github.gofynd:nitrozen-android", version = "1.1.0"}

#material
material ={module = "com.google.android.material:material",version = "1.11.0"}

